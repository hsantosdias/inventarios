name: PowerShell CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  ps-ci:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PowerShell modules
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          # Evita prompts do PSGallery
          try { Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted } catch {}

          # Instala Pester v4 (compatível com seus testes) e evita prompt de publisher
          Install-Module Pester `
            -Scope CurrentUser `
            -Force `
            -RequiredVersion 4.10.1 `
            -SkipPublisherCheck `
            -AcceptLicense `
            -Confirm:$false

          # Instala ScriptAnalyzer (sem depender do Pester aqui)
          Install-Module PSScriptAnalyzer `
            -Scope CurrentUser `
            -Force `
            -AcceptLicense `
            -Confirm:$false

          # Garante que a sessão carregou a versão correta do Pester
          Import-Module Pester -RequiredVersion 4.10.1 -Force
          Get-Module -ListAvailable Pester | Select Name,Version,Path | Sort Version -Descending | Format-Table

      - name: ScriptAnalyzer
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $settings = Join-Path $PWD 'PSScriptAnalyzerSettings.psd1'
          Invoke-ScriptAnalyzer -Path './scripts' -Settings $settings -Recurse -ErrorAction Stop

      - name: Pester tests (v4)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Write-Host "PWD:" $PWD
          Get-ChildItem -Name

          # Garante Pester 4 na etapa de teste
          Import-Module Pester -RequiredVersion 4.10.1 -Force
          Invoke-Pester -Path './tests' -Verbose -EnableExit
